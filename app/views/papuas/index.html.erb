<p id="notice"><%= notice %></p>

<h1 class="py-2 text-3xl text-gary-900 font-bold">Papunesias</h1>

<!--div class="load-ajax" style="float: right; width: 150px; height: 20px; background-position: center;
    background-repeat: no-repeat;">xxxxxxxxxxxx</div-->

<%= form_tag papuas_path, :method => 'get', :id => "papuas_search" do %>
<div class="px-4 bg-white min-w-full ">
  <div class="items-center block w-full mt-2 text-center lg:flex lg:flex-row lg:flex-1 lg:mt-0 lg:text-left justify-between">
    <!--input type="text" id="myInput" onkeyup="myFunction(7)" placeholder="Search Inventory" title="Type in inventories" class="focus:ring-indigo-500 focus:border-indigo-500 block w-1/4 shadow-sm sm:text-sm border-gray-300 rounded-md"-->

    
    
    <%= render 'shared/searchbar' %>
    
    
    <%# if user_signed_in? && current_user.admin? %>
    <!--a href="<%= new_papua_path(@papua) %>">
      <span class="hidden sm:block">
        <button type="button" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          <svg xmlns="http://www.w3.org/2000/svg" class="-ml-1 mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          New Language
        </button>  
      </span>
    </a-->
    <%#= link_to 'New Product', new_product_path, class: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
    <%# end %>
  </div>

  <div class="flex justify-center space-x-4 text-lg font-medium text-gray-900">
    <div>
      <p>
        Results: <%= @papuas_results.length %>
      </p>
    </div>
    <div>
      <P>
        Total: <%= @papuas_all.length %>
      </p>
    </div>
  </div>

  <!--div id='map' style='width: 100%; height: 600px;'></div-->
  <div id='map' style='width: 100%; height: 600px;'>
    <%= render 'maps' %>
  </div>

  <div id="state-legend" class="legend">
    <h4>Results</h4>
    <div><span style="background-color: #fbb03b" class="circle"></span>PNG</div>
    <div><span style="background-color: #e55e5e" class="circle"></span>IND</div>
    <div><span style="background-color: #223b53" class="circle"></span>Solomon Islands</div>
    <h4 style="margin-top: 14px ">The Rest</h4>
    <div><span><img class="img" src="/school-JP_PNG.svg"></img></span>PNG</div>
    <div><span><img class="img" src="/school-JP_IND.svg"></img></span>IND</div>
    <div><span><img class="img" src="/school-JP_Solo.svg"></img></span>Solomon Islands</div>
  </div>

  <div class="py-5 flex items-center justify-between" id="charts">
    
    <%= render 'charts' %>

  </div>

  <!--div class="py-3" id='map' style='width: 1000px; height: 600px;'></div-->
  <%#= text_field_tag :search_inc, params[:search_inc] %>
  <!--input type="text" id="search_c" name="search_c"-->

  <div class="mt-3 bg-white py-3 flex items-center justify-between border-t border-gray-200">
    <div id="page_entries_info"><%= render 'page_entries_info' %></div>
    <!--div id="paginator"><%#= paginate @papuas, remote: true %></div-->
  </div>

  
  <div class="align-middle inline-block min-w-full" id="papuas_table">
  <div class="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
      
    <table id="myTable" class="min-w-full divide-y divide-gray-200">
    <thead class="bg-gray-50 divide-y divide-gray-200">
        <tr class="h-12">
            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              No
            </th>

            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <p>Language</p>
              <%#= text_field_tag :search_inc, params[:search_inc] %>
              <!--input type="text" id="search_c" name="search_c" class="focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md"-->
            </th>

            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Language Family
            </th>

            <th scope="col" class="px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              ISO
            </th>

            <th scope="col" class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Country
            </th>

            <!--th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Latitude
            </th>

            <th scope="col" class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              longitude
            </th-->

            <th scope="col" class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Inventory
            </th>

            <th scope="col" class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <p>C</p>
              <!--input type="text" id="search_c" name="search_c" class="focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md w-12"-->
            </th>

            <th scope="col" class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <p>V</p>
              <!--input type="text" id="search_v" name="search_v" class="focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md w-12"-->
            </th>

            <th scope="col" class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <p>Total</p>
              <!--input type="text" id="search_cv" name="search_cv" class="focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md w-12"-->
            </th>
        </tr>
        <tr>
            <th scope="col" class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              
            </th>

            <th scope="col" class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <input type="text" id="search_language" name="search_language" class="focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md w-28">
            </th>

            <th scope="col" class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <input type="text" id="search_family" name="search_family" class="focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md w-32">
            </th>

            <th scope="col" class="px-2 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <input type="text" id="search_iso" name="search_iso" class="focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md w-12">
            </th>

            <th scope="col" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <input type="text" id="search_country" name="search_country" class="focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md w-24">
            </th>

            <!--th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Latitude
            </th>

            <th scope="col" class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              longitude
            </th-->

            <th scope="col" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <!--input type="text" id="search_inv" name="search_inv" class="focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md w-40 h-8"-->
            </th>

            <th scope="col" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <div class="mt-1 relative rounded-md shadow-sm">
                <div class="absolute inset-y-0 left-0 flex items-center">
                  <select id="select_c" name="select_c" class="focus:ring-indigo-500 focus:border-indigo-500 h-full py-0 pl-2 pr-7 border-gray-300 bg-transparent text-gray-500 sm:text-sm rounded-l-md">
                    <option value="gte"> >= </option>
                    <option value="gt"> > </option>
                    <option value="eq" selected> = </option>
                    <option value="lt"> < </option>
                    <option value="lte"> <= </option>
                  </select>
                </div>
                <input type="text" id="search_c" name="search_c" class="focus:ring-indigo-500 focus:border-indigo-500 block pl-16 sm:text-sm border-gray-300 rounded-md w-28">
              </div>
            </th>

            <th scope="col" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <div class="mt-1 relative rounded-md shadow-sm">
                <div class="absolute inset-y-0 left-0 flex items-center">
                  <select id="select_v" name="select_v" class="focus:ring-indigo-500 focus:border-indigo-500 h-full py-0 pl-2 pr-7 border-gray-300 bg-transparent text-gray-500 sm:text-sm rounded-l-md">
                    <option value="gte"> >= </option>
                    <option value="gt"> > </option>
                    <option value="eq" selected> = </option>
                    <option value="lt"> < </option>
                    <option value="lte"> <= </option>
                  </select>
                </div>
                <input type="text" id="search_v" name="search_v" class="focus:ring-indigo-500 focus:border-indigo-500 block pl-16 sm:text-sm border-gray-300 rounded-md w-28">
              </div>
            </th>

            <th scope="col" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <div class="mt-1 relative rounded-md shadow-sm">
                <div class="absolute inset-y-0 left-0 flex items-center">
                  <select id="select_cv" name="select_cv" class="focus:ring-indigo-500 focus:border-indigo-500 h-full py-0 pl-2 pr-7 border-gray-300 bg-transparent text-gray-500 sm:text-sm rounded-l-md">
                    <option value="gte"> >= </option>
                    <option value="gt"> > </option>
                    <option value="eq" selected> = </option>
                    <option value="lt"> < </option>
                    <option value="lte"> <= </option>
                  </select>
                </div>
                <input type="text" id="search_cv" name="search_cv" class="focus:ring-indigo-500 focus:border-indigo-500 block pl-16 sm:text-sm border-gray-300 rounded-md w-28">
              </div>
            </th>
        </tr>
    </thead>
    <tbody class="bg-white divide-y divide-gray-200">
      <%= render 'papuas' %>
    </tbody>
    
  </table>
  </div>
</div>
 

  <!--div class="mt-3 bg-white py-3 flex items-center justify-between border-t border-gray-200">
    <div id="page_entries_info"><%#= render 'page_entries_info' %></div>
    <div id="paginator"><%#= paginate @papuas, remote: true %></div>
  </div-->  
   

  <!--div class="bg-white py-3 flex items-center justify-end border-t border-gray-200">
    <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
      <div>
          <p class="text-sm text-gray-700">
            Showing
            <%# if @papuas.length == 0 %>
              <span class="font-medium"><%#= @papuas.offset_value %></span>
              of
              <span class="font-medium"> <%#= @papuas.total_count %> </span>
              results
              <%# else %>
              <span class="font-medium"><%#= @papuas.offset_value + 1 %></span>
              to
              <span class="font-medium"><%#= @papuas.offset_value + @papuas.length %></span>
              of
              <span class="font-medium"> <%#= @papuas.total_count %> </span>
              results
            <%# end %>  
          </p>
        </div>

        <div id="paginator">
          <%#= paginate @papuas, remote: true %>
        </div>

    </div>
  </div-->

<!--script>
    mapboxgl.accessToken = 'pk.eyJ1Ijoic2lsZW5jZWp0IiwiYSI6ImNrc2EwN3ZwNjB6NTcydXFxZ2N2bmRwNHcifQ.uxkpkzBwxIFOgqzEN_7bqA';
    const map = new mapboxgl.Map({
        container: 'map', // container ID
        style: 'mapbox://styles/mapbox/light-v10', // style URL
        center: [141.65793, -4.20192], // starting position [lng, lat]
        zoom: 4 // starting zoom
    });

    
    var lng_test = <%= raw @lng %>;
    var lat_test = <%= raw @lat %>;
    var name_test = <%= raw @name %>;
    var family_test = <%= raw @family %>;
    var country_test = <%= raw @country %>;


    //Create GeoJSON Object
    var gj = {
      "name":"MyFeatureType",
      "type":"FeatureCollection",
      "features":[]
    };

    // Get all location results
    for (let i = 0; i < lng_test.length; i++) {
      //var name = name_test[i]
      // Create an empty feature to store loaction
      gj.features.push({
        "type": "Feature",
        "geometry": {
          "type": "Point",
          "coordinates": []
        },
        "properties": {
          "description": `<strong>${name_test[i]}</strong><p>${family_test[i]}</P>`,
          "ethnicity": country_test[i]
        }
      });
      // 
      gj.features[i].geometry.coordinates.push(lng_test[i], lat_test[i]);
    };

    map.on('load', () => {
      // Add a GeoJSON source with results points.
      map.addSource('points', {
        'type': 'geojson',
        'data': gj
      });
      // Add a circle layer
      map.addLayer({
        'id': 'circle',
        'type': 'circle',
        'source': 'points',
        'paint': {
          'circle-color': [
            'match',
            ['get', 'ethnicity'],
            'PNG',
            '#fbb03b',
            'IND',
            '#e55e5e',
            '#223b53'
          ],
          'circle-radius': 6,
          'circle-stroke-width': 2,
          'circle-stroke-color': '#223b53'
        }
      });

      // Create a popup, but don't add it to the map yet.
      const popup = new mapboxgl.Popup({
        closeButton: false,
        closeOnClick: false
      });
       
      // Center the map on the coordinates of any clicked circle from the 'circle' layer.
      map.on('click', 'circle', (e) => {
        map.flyTo({
          center: e.features[0].geometry.coordinates
        });
        map.getCanvas().style.cursor = 'pointer';

        // Copy coordinates array.
        const coordinates = e.features[0].geometry.coordinates.slice();
        const description = e.features[0].properties.description;
         
        // Ensure that if the map is zoomed out such that multiple
        // copies of the feature are visible, the popup appears
        // over the copy being pointed to.
        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
        }

        // Click and then add popup to map
        new mapboxgl.Popup()
          .setLngLat(coordinates)
          .setHTML(description)
          .addTo(map);
      });
       
      // Change the cursor to a pointer when the it enters a feature in the 'circle' layer.
      map.on('mouseenter', 'circle', (e) => {
        //map.getCanvas().style.cursor = 'pointer';

        // Copy coordinates array.
        const coordinates = e.features[0].geometry.coordinates.slice();
        const description = e.features[0].properties.description;
         
        // Ensure that if the map is zoomed out such that multiple
        // copies of the feature are visible, the popup appears
        // over the copy being pointed to.
        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
        }
         
        // Populate the popup and set its coordinates
        // based on the feature found.
        popup.setLngLat(coordinates).setHTML(description).addTo(map);
      });
       
      // Change it back to a pointer when it leaves.
      map.on('mouseleave', 'circle', () => {
        map.getCanvas().style.cursor = '';
        popup.remove();
      });
    });

    /*
    function myFunction(n) {
      var input, filter, table, tr, td, i, txtValue;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase().replace(/\W/g, ' ').replace(/\s+/g, ' ').trim().split(' ');

      table = document.getElementById("myTable");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td")[n]; //7th Column
        if (td) {
          txtValue = td.textContent || td.innerText;
          for(j = 0; j < filter.length; j++){
            if (txtValue.toUpperCase().indexOf(filter[j]) > -1) {
              tr[i].style.display = "";
            }
            else {
              tr[i].style.display = "none";
              break;
            }
          }
          /*if (txtValue.toUpperCase().indexOf(filter) > -1) {
            tr[i].style.display = "";
          } else {
            tr[i].style.display = "none";
          }
        }       
      }
    }*/
    
</script-->
<% end %>