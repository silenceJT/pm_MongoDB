<p id="notice"><%= notice %></p>

<h1 class="py-2 text-3xl text-gary-900 font-bold">Papunesias</h1>



<div class="px-4 bg-white min-w-full ">
  <div class="items-center block w-full mt-2 text-center lg:flex lg:flex-row lg:flex-1 lg:mt-0 lg:text-left justify-between">
    <!--input type="text" id="myInput" onkeyup="myFunction(7)" placeholder="Search Inventory" title="Type in inventories" class="focus:ring-indigo-500 focus:border-indigo-500 block w-1/4 shadow-sm sm:text-sm border-gray-300 rounded-md"-->

    <div class="text-lg font-medium text-gray-900">
      <p>
        Results: <%= @papuas_results.length %>
      </p>
      <P>
        Total: <%= @papuas_all.length %>
      </p>
    </div>

    <%= form_tag(papuas_path, method: "get") do %>
    <div class="py-4 flex items-center">
      <%= text_field_tag :search_inc, params[:search_inc], class: "focus:ring-indigo-500 focus:border-indigo-500 block w-96 shadow-sm sm:text-sm border-gray-300 rounded-md", placeholder: "Search inventories" %>
      <%= text_field_tag :search_exc, params[:search_exc], class: "focus:ring-indigo-500 focus:border-indigo-500 block w-96 shadow-sm sm:text-sm border-gray-300 rounded-md ml-3", placeholder: "Exclude inventories" %>
      <%= submit_tag "Search!", class: "ml-3 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>


      <%= link_to "Download: Excel", 
        papuas_path({:format => "xls"}),
        download: 'Papunesias.xls', class: "ml-3 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500" %>
    </div>

    <% end %>

    <%# if user_signed_in? && current_user.admin? %>
    <!--a href="<%= new_papua_path(@papua) %>">
      <span class="hidden sm:block">
        <button type="button" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          <svg xmlns="http://www.w3.org/2000/svg" class="-ml-1 mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          New Language
        </button>  
      </span>
    </a-->
    <%#= link_to 'New Product', new_product_path, class: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
    <%# end %>
  </div>

  <div class="py-3">

    <%= pie_chart [["Results", @papuas_results.length], ["Others", @papuas_all.length - @papuas_results.length]], colors: ["#4264fb", "#fb4264"], label: @papuas_results.length, download: true %>

    <%= bar_chart [["Average of Segments",@avg_s, @avg_s], ["Average of Consonants", @avg_c, @avg_c], ["Average of Vowels", @avg_v, @avg_v]], download: true %>

  </div>

  <div class="py-3" id='map' style='width: 100%; height: 700px;'></div>
  <script>
    mapboxgl.accessToken = 'pk.eyJ1Ijoic2lsZW5jZWp0IiwiYSI6ImNrc2EwN3ZwNjB6NTcydXFxZ2N2bmRwNHcifQ.uxkpkzBwxIFOgqzEN_7bqA';
    const map = new mapboxgl.Map({
        container: 'map', // container ID
        style: 'mapbox://styles/mapbox/light-v10', // style URL
        center: [141.65793, -4.20192], // starting position [lng, lat]
        zoom: 5 // starting zoom
    });

    
    var lng_test = <%= raw @lng %>;
    var lat_test = <%= raw @lat %>;
    var name_test = <%= raw @name %>;
    var family_test = <%= raw @family %>;
    var country_test = <%= raw @country %>;


    //Create GeoJSON Object
    var gj = {
      "name":"MyFeatureType",
      "type":"FeatureCollection",
      "features":[]
    };

    // Get all location results
    for (let i = 0; i < lng_test.length; i++) {
      //var name = name_test[i]
      // Create an empty feature to store loaction
      gj.features.push({
        "type": "Feature",
        "geometry": {
          "type": "Point",
          "coordinates": []
        },
        "properties": {
          "description": `<strong>${name_test[i]}</strong><p>${family_test[i]}</P>`,
          "ethnicity": country_test[i]
        }
      });
      // 
      gj.features[i].geometry.coordinates.push(lng_test[i], lat_test[i]);
    };

    map.on('load', () => {
      // Add a GeoJSON source with results points.
      map.addSource('points', {
        'type': 'geojson',
        'data': gj
      });
      // Add a circle layer
      map.addLayer({
        'id': 'circle',
        'type': 'circle',
        'source': 'points',
        'paint': {
          'circle-color': [
            'match',
            ['get', 'ethnicity'],
            'PNG',
            '#fbb03b',
            'IND',
            '#e55e5e',
            '#223b53'
          ],
          'circle-radius': 6,
          'circle-stroke-width': 2,
          'circle-stroke-color': '#223b53'
        }
      });

      // Create a popup, but don't add it to the map yet.
      const popup = new mapboxgl.Popup({
        closeButton: false,
        closeOnClick: false
      });
       
      // Center the map on the coordinates of any clicked circle from the 'circle' layer.
      map.on('click', 'circle', (e) => {
        map.flyTo({
          center: e.features[0].geometry.coordinates
        });
        map.getCanvas().style.cursor = 'pointer';

        // Copy coordinates array.
        const coordinates = e.features[0].geometry.coordinates.slice();
        const description = e.features[0].properties.description;
         
        // Ensure that if the map is zoomed out such that multiple
        // copies of the feature are visible, the popup appears
        // over the copy being pointed to.
        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
        }

        // Click and then add popup to map
        new mapboxgl.Popup()
          .setLngLat(coordinates)
          .setHTML(description)
          .addTo(map);
      });
       
      // Change the cursor to a pointer when the it enters a feature in the 'circle' layer.
      map.on('mouseenter', 'circle', (e) => {
        //map.getCanvas().style.cursor = 'pointer';

        // Copy coordinates array.
        const coordinates = e.features[0].geometry.coordinates.slice();
        const description = e.features[0].properties.description;
         
        // Ensure that if the map is zoomed out such that multiple
        // copies of the feature are visible, the popup appears
        // over the copy being pointed to.
        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
        }
         
        // Populate the popup and set its coordinates
        // based on the feature found.
        popup.setLngLat(coordinates).setHTML(description).addTo(map);
      });
       
      // Change it back to a pointer when it leaves.
      map.on('mouseleave', 'circle', () => {
        map.getCanvas().style.cursor = '';
        popup.remove();
      });
    });

    console.log();

    
  </script>

  <div class="align-middle inline-block min-w-full ">
    <div class="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
      <table id="myTable" class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              No
            </th>

            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Language
              <!--input type="text" id="myInput" onkeyup="myFunction(1)" title="Type in a name" class="focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md"-->
            </th>

            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Language Family
            </th>

            <th scope="col" class="px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              ISO
            </th>

            <th scope="col" class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Country
            </th>

            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Latitude
            </th>

            <th scope="col" class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              longitude
            </th>

            <th scope="col" class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Inventory
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% @papuas.each do |papua| %>
          <tr onclick="window.location.href='/papuas/<%= papua.id.to_s %>'" style="cursor:pointer">
            <td class="px-4 py-4 whitespace-nowrap">
              <div class="text-sm text-gray-900"><%= papua.no %></div>
            </td>

            <td class="px-4 py-4 whitespace-nowrap">
              <div class="flex items-center">
                    <!--div class="flex-shrink-0 h-10 w-10">
                      <img class="h-10 w-10 rounded-full" src="https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=4&w=256&h=256&q=60" alt="">
                    </div-->
                    <!--div class="ml-4"-->
                    <div class="text-sm font-medium text-gray-900">
                      <%= papua.language_name %>
                    </div>
                      <!--div class="text-sm text-gray-500">
                        jane.cooper@example.com
                      </div-->
                      <!--/div-->
                    </div>
                  </td>
                  <td class="px-4 py-4 whitespace-nowrap">
                    <div class="text-sm text-gray-500"><%= papua.language_family %></div>
                    <!--div class="text-sm text-gray-500">Optimization</div-->
                  </td>
                  <td class="px-2 py-4 whitespace-nowrap">
                    <div class="text-sm text-gray-500"><%= papua.iso %></div>
                  </td>
                  <td class="px-3 py-4 whitespace-nowrap text-sm text-gray-500">
                    <%= papua.country %>
                  </td>
                  <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-500">
                    <%= papua.latitude %>
                  </td>
                  <td class="px-6 py-3 text-sm text-gray-500 ">
                    <%= papua.longitude %>
                  </td>
                  <td class="px-3 py-4 whitespace-nowrap text-sm text-gray-500">
                    <%= papua.inv %>
                  </td>
                <!--td class="px-2 py-4 whitespace-nowrap text-right text-sm font-medium">
                  <%#= link_to 'Edit', edit_product_path(product), class: "text-indigo-600 hover:text-indigo-900" %>
                </td-->
              </tr>
              <% end %>
              <!-- More items... -->
            </tbody>
          </table>


          <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
              <div>
                <p class="text-sm text-gray-700">
                  Showing
                  <% if @papuas.length == 0 %>
                  <span class="font-medium"><%= @papuas.offset_value %></span>
                  of
                  <span class="font-medium"> <%= @papuas.total_count %> </span>
                  results
                  <% else %>
                  <span class="font-medium"><%= @papuas.offset_value + 1 %></span>
                  to
                  <span class="font-medium"><%= @papuas.offset_value + @papuas.length %></span>
                  of
                  <span class="font-medium"> <%= @papuas.total_count %> </span>
                  results
                  <% end %>  
                </p>
              </div>

              <div>
                <%= paginate @papuas %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

<!--script>
function myFunction(n) {
  var input, filter, table, tr, td, i, txtValue;
  input = document.getElementById("myInput");
  filter = input.value.toUpperCase().replace(/\W/g, ' ').replace(/\s+/g, ' ').trim().split(' ');

  table = document.getElementById("myTable");
  tr = table.getElementsByTagName("tr");
  for (i = 0; i < tr.length; i++) {
    td = tr[i].getElementsByTagName("td")[n]; //7th Column
    if (td) {
      txtValue = td.textContent || td.innerText;
      for(j = 0; j < filter.length; j++){
        if (txtValue.toUpperCase().indexOf(filter[j]) > -1) {
          tr[i].style.display = "";
        }
        else {
          tr[i].style.display = "none";
          break;
        }
      }
      /*if (txtValue.toUpperCase().indexOf(filter) > -1) {
        tr[i].style.display = "";
      } else {
        tr[i].style.display = "none";
      }*/
    }       
  }
}
</script-->
